/*=============================================
=            Dynamically create colors            =
=============================================*/
/*
It is possible to use loops in scss. The syntax for a forEach loops is
@each $key, $val in $colors { 
  ...body of loop 
}

For a for loop, we write it thus;
@for $counter from [startValue] through [endValue] {
  ...body of loop
}

if statements work just like you'd have guessed. You just need to use the 
@if, @else @elseif construct.
*/
@each $key, $val in $colors {
  // to interpolate and use a variable, use the construct below;
  // #{variable}
  .text-#{$key} {
    color: $val;
  }
  .text-hover-#{$key} {
    &:hover {
      color: $val;
    }
  }
  .bg-#{$key} {
    background-color: $val;
  }

  @if ($val != black and $val != white) {
    // light variations
    @for $i from 1 through 9 {
      .text-#{$key}-light-#{$i} {
        color: mix(white, $val, $i * 10%);
      }
      .text-hover-#{$key}-light-#{$i} {
        &:hover {
          color: mix(white, $val, $i * 10%);
        }
      }
      .bg-#{$key}-light-#{$i} {
        background-color: mix(white, $val, $i * 10%);
      }
    }

    // dark variations
    @for $i from 1 through 9 {
      .text-#{$key}-dark-#{$i} {
        color: mix(black, $val, $i * 10%);
      }
      .text-hover-#{$key}-dark-#{$i} {
        &:hover {
          color: mix(black, $val, $i * 10%);
        }
      }
      .bg-#{$key}-dark-#{$i} {
        background-color: mix(black, $val, $i * 10%);
      }
    }
  }
}
